{"ast":null,"code":"var _jsxFileName = \"/Users/estherjang/Documents/hmm/src/App.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Form from \"./components/Form\";\nimport Title from \"./components/Title\";\nimport Display from \"./components/Display\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport firebase from \"./firebase.js\";\n\nconst styles = theme => ({\n  title: {\n    margin: theme.spacing(\"10%\", 0, 5)\n  },\n  newContainer: {\n    padding: theme.spacing(3),\n    marginBottom: \"15%\"\n  },\n  formInput: {\n    width: \"100%\",\n    margin: theme.spacing(1, 0, 0, 0)\n  },\n  button: {\n    float: \"right\",\n    margin: theme.spacing(1, 0, 0, 1)\n  },\n  wordWrap: \"break-word\",\n  display: {\n    marginBottom: theme.spacing(8)\n  },\n  flexEnd: {\n    display: \"flex\",\n    justifyContent: \"flex-end\"\n  }\n});\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.addData = (title, body) => {\n      const itemsRef = firebase.database().ref(\"data\");\n      const newData = {\n        title,\n        body,\n        time: new Date().getTime(),\n        likes: 0\n      };\n      itemsRef.push(newData);\n    };\n\n    this.removeData = id => {\n      const itemRef = firebase.database().ref(`/data/${id}`);\n      itemRef.remove();\n    };\n\n    this.updateLikes = (id, likes) => {\n      const likesItemRef = firebase.database().ref(`/data/${id}/likes`);\n      likesItemRef.update({\n        \"/likes/\": likes\n      });\n    };\n\n    this.state = {\n      data: []\n    };\n  }\n\n  componentDidMount() {\n    const itemsRef = firebase.database().ref(\"data\");\n    itemsRef.on(\"value\", snapshot => {\n      let allData = snapshot.val();\n      let newData = [];\n\n      for (let dataItem in allData) {\n        newData.push({\n          id: dataItem,\n          title: allData[dataItem].title,\n          body: allData[dataItem].body,\n          time: allData[dataItem].time,\n          likes: allData[dataItem].likes\n        });\n      }\n\n      this.setState({\n        data: newData\n      });\n    });\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"main\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      component: \"main\",\n      maxWidth: \"md\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CssBaseline, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Title, {\n      classes: classes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Form, {\n      classes: classes,\n      addData: this.addData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Display, {\n      classes: classes,\n      data: this.state.data,\n      removeData: this.removeData,\n      updateLikes: this.updateLikes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(App);","map":{"version":3,"sources":["/Users/estherjang/Documents/hmm/src/App.js"],"names":["React","PropTypes","Form","Title","Display","Container","CssBaseline","withStyles","firebase","styles","theme","title","margin","spacing","newContainer","padding","marginBottom","formInput","width","button","float","wordWrap","display","flexEnd","justifyContent","App","Component","constructor","props","addData","body","itemsRef","database","ref","newData","time","Date","getTime","likes","push","removeData","id","itemRef","remove","updateLikes","likesItemRef","update","state","data","componentDidMount","on","snapshot","allData","val","dataItem","setState","render","classes","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Form from \"./components/Form\";\nimport Title from \"./components/Title\";\nimport Display from \"./components/Display\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport firebase from \"./firebase.js\";\n\nconst styles = (theme) => ({\n  title: {\n    margin: theme.spacing(\"10%\", 0, 5),\n  },\n  newContainer: {\n    padding: theme.spacing(3),\n    marginBottom: \"15%\",\n  },\n  formInput: {\n    width: \"100%\",\n    margin: theme.spacing(1, 0, 0, 0),\n  },\n  button: {\n    float: \"right\",\n    margin: theme.spacing(1, 0, 0, 1),\n  },\n  wordWrap: \"break-word\",\n  display: {\n    marginBottom: theme.spacing(8),\n  },\n  flexEnd: {\n    display: \"flex\", \n    justifyContent: \"flex-end\"\n  }\n});\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n    };\n  }\n\n  componentDidMount() {\n    const itemsRef = firebase.database().ref(\"data\");\n    itemsRef.on(\"value\", (snapshot) => {\n      let allData = snapshot.val();\n      let newData = [];\n      for (let dataItem in allData) {\n        newData.push({\n          id: dataItem,\n          title: allData[dataItem].title,\n          body: allData[dataItem].body,\n          time: allData[dataItem].time,\n          likes: allData[dataItem].likes\n        });\n      }\n      this.setState({\n        data: newData,\n      });\n    });\n  }\n\n  addData = (title, body) => {\n    const itemsRef = firebase.database().ref(\"data\");\n    const newData = {\n      title,\n      body,\n      time: new Date().getTime(),\n      likes: 0\n    };\n    itemsRef.push(newData);\n  };\n\n  removeData = (id) => {\n    const itemRef = firebase.database().ref(`/data/${id}`);\n    itemRef.remove();\n  }\n\n  updateLikes = (id, likes) => {\n    const likesItemRef = firebase.database().ref(`/data/${id}/likes`);\n    likesItemRef.update({\n      \"/likes/\": likes \n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <main>\n        <Container component=\"main\" maxWidth=\"md\">\n          <CssBaseline />\n          <Title classes={classes} />\n          <Form classes={classes} addData={this.addData} />\n          <Display classes={classes} data={this.state.data} removeData={this.removeData} updateLikes={this.updateLikes}/>\n        </Container>\n      </main>\n    );\n  }\n}\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(App);\n"]},"metadata":{},"sourceType":"module"}