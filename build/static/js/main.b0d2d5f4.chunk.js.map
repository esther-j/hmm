{"version":3,"sources":["components/Form.js","components/Title.js","components/Display.js","firebase.js","App.js","serviceWorker.js","index.js"],"names":["Form","props","changeTitle","e","setState","title","target","value","changeBody","body","clear","onSubmit","preventDefault","addData","state","classes","this","Container","maxWidth","Paper","className","newContainer","Typography","component","variant","align","color","TextField","required","formInput","id","label","onChange","multiline","rows","flexEnd","Button","button","onClick","type","React","Component","Title","gutterBottom","Display","onDelete","removeData","onLike","likes","updateLikes","display","Grid","container","spacing","data","reverse","map","card","item","key","xs","sm","md","Card","CardContent","moment","time","format","wordWrap","ButtonGroup","aria-label","size","bind","concat","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","App","itemsRef","database","ref","newData","Date","getTime","push","remove","update","on","snapshot","allData","val","dataItem","CssBaseline","withStyles","theme","margin","padding","marginBottom","width","float","justifyContent","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b0d2d5f4.chunk.js","sourcesContent":["import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport PropTypes from \"prop-types\";\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      classes: props.classes,\n      title: \"\",\n      body: \"\",\n    };\n  }\n\n  changeTitle = (e) => {\n    this.setState({\n      title: e.target.value,\n    });\n  };\n\n  changeBody = (e) => {\n    this.setState({\n      body: e.target.value,\n    });\n  };\n\n  clear = () => {\n    this.setState({\n      title: \"\",\n      body: \"\",\n    });\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    this.props.addData(this.state.title, this.state.body);\n    this.clear();\n  };\n\n  render() {\n    const { classes } = this.state;\n    return (\n      <Container maxWidth=\"sm\">\n        <Paper className={classes.newContainer}>\n          <Typography\n            component=\"h3\"\n            variant=\"h4\"\n            align=\"center\"\n            color=\"textSecondary\"\n          >\n            i'm hmming about...\n          </Typography>\n          <form onSubmit={this.onSubmit}>\n            <TextField\n              required\n              className={classes.formInput}\n              id=\"outlined-required\"\n              label=\"Title\"\n              variant=\"outlined\"\n              onChange={this.changeTitle}\n              value={this.state.title}\n            />\n            <TextField\n              id=\"outlined-multiline-static\"\n              className={classes.formInput}\n              label=\"Main content\"\n              multiline\n              rows={5}\n              variant=\"outlined\"\n              onChange={this.changeBody}\n              value={this.state.body}\n            />\n            <div className={classes.flexEnd}>\n              <Button\n                variant=\"outlined\"\n                className={classes.button}\n                color=\"primary\"\n                onClick={this.clear}\n              >\n                Clear\n              </Button>\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                className={classes.button}\n                color=\"primary\"\n              >\n                Submit\n              </Button>\n            </div>\n          </form>\n        </Paper>\n      </Container>\n    );\n  }\n}\n\nForm.propTypes = {\n  classes: PropTypes.object.isRequired,\n  addData: PropTypes.func.isRequired,\n};\n\nexport default Form;\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport PropTypes from \"prop-types\";\n\nfunction Title(props) {\n  return (\n    <div className={props.classes.title}>\n      <Typography\n        component=\"h1\"\n        variant=\"h2\"\n        align=\"center\"\n        color=\"textPrimary\"\n      >\n        hmm\n      </Typography>\n      <Typography\n        component=\"h5\"\n        variant=\"h6\"\n        align=\"center\"\n        color=\"textPrimary\"\n        gutterBottom\n      >\n        what's on your mind?\n      </Typography>\n    </div>\n  );\n}\n\nTitle.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n\nexport default Title;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\n\nclass Display extends React.Component {\n  onDelete = (id) => {\n    this.props.removeData(id);\n  };\n\n  onLike = (id, likes) => {\n    this.props.updateLikes(id, likes + 1);\n  };\n\n  render() {\n    return (\n      <Container maxWidth=\"md\" className={this.props.classes.display}>\n        <Grid container spacing={2}>\n          {this.props.data.reverse().map((card) => (\n            <Grid item key={card.id} xs={12} sm={6} md={4}>\n              <Card>\n                <CardContent>\n                  <Typography variant=\"caption\" display=\"block\" gutterBottom>\n                    {moment(card.time).format(\"lll\")}\n                  </Typography>\n                  <Typography\n                    variant=\"h5\"\n                    component=\"h2\"\n                    gutterBottom\n                    className={this.props.classes.wordWrap}\n                  >\n                    {card.title}\n                  </Typography>\n                  <Typography\n                    variant=\"body2\"\n                    component=\"p\"\n                    color=\"textSecondary\"\n                    gutterBottom\n                    className={this.props.classes.wordWrap}\n                  >\n                    {card.body}\n                  </Typography>\n                  <div className={this.props.classes.flexEnd}>\n                    <ButtonGroup\n                      variant=\"text\"\n                      color=\"primary\"\n                      aria-label=\"text primary button group\"\n                      size=\"small\"\n                    >\n                      <Button\n                        onClick={this.onLike.bind(this, card.id, card.likes)}\n                        size=\"small\"\n                      >\n                        {\"Like\".concat(card.likes > 0 ? ` ${card.likes}` : \"\")}\n                      </Button>\n                      <Button\n                        onClick={this.onDelete.bind(this, card.id)}\n                        size=\"small\"\n                      >\n                        Delete\n                      </Button>\n                    </ButtonGroup>\n                  </div>\n                </CardContent>\n              </Card>\n            </Grid>\n          ))}\n        </Grid>\n      </Container>\n    );\n  }\n}\n\nDisplay.propTypes = {\n  classes: PropTypes.object.isRequired,\n  data: PropTypes.array.isRequired,\n  removeData: PropTypes.func.isRequired,\n  updateLikes: PropTypes.func.isRequired,\n};\n\nexport default Display;\n","// src/firebase.js\nimport firebase from \"firebase\";\nvar config = {\n  apiKey: \"AIzaSyA_jXmjYMmCq5h25xz7GmRPjuswAz7kb9s\",\n  authDomain: \"hmm-database.firebaseapp.com\",\n  databaseURL: \"https://hmm-database.firebaseio.com\",\n  projectId: \"hmm-database\",\n  storageBucket: \"hmm-database.appspot.com\",\n  messagingSenderId: \"1098457919123\",\n  appId: \"1:1098457919123:web:ad6fb941f492c08496a766\",\n  measurementId: \"G-EBTJ0G59ST\",\n};\nfirebase.initializeApp(config);\nexport default firebase;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Form from \"./components/Form\";\nimport Title from \"./components/Title\";\nimport Display from \"./components/Display\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport firebase from \"./firebase.js\";\n\nconst styles = (theme) => ({\n  title: {\n    margin: theme.spacing(\"10%\", 0, 5),\n  },\n  newContainer: {\n    padding: theme.spacing(3),\n    marginBottom: \"15%\",\n  },\n  formInput: {\n    width: \"100%\",\n    margin: theme.spacing(1, 0, 0, 0),\n  },\n  button: {\n    float: \"right\",\n    margin: theme.spacing(1, 0, 0, 1),\n  },\n  wordWrap: \"break-word\",\n  display: {\n    marginBottom: theme.spacing(8),\n  },\n  flexEnd: {\n    display: \"flex\", \n    justifyContent: \"flex-end\"\n  }\n});\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n    };\n  }\n\n  componentDidMount() {\n    const itemsRef = firebase.database().ref(\"data\");\n    itemsRef.on(\"value\", (snapshot) => {\n      let allData = snapshot.val();\n      let newData = [];\n      for (let dataItem in allData) {\n        newData.push({\n          id: dataItem,\n          title: allData[dataItem].title,\n          body: allData[dataItem].body,\n          time: allData[dataItem].time,\n          likes: allData[dataItem].likes\n        });\n      }\n      this.setState({\n        data: newData,\n      });\n    });\n  }\n\n  addData = (title, body) => {\n    const itemsRef = firebase.database().ref(\"data\");\n    const newData = {\n      title,\n      body,\n      time: new Date().getTime(),\n      likes: 0\n    };\n    itemsRef.push(newData);\n  };\n\n  removeData = (id) => {\n    const itemRef = firebase.database().ref(`/data/${id}`);\n    itemRef.remove();\n  }\n\n  updateLikes = (id, likes) => {\n    const likesItemRef = firebase.database().ref(`/data/${id}`);\n    likesItemRef.update({\n      likes\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <main>\n        <Container component=\"main\" maxWidth=\"md\">\n          <CssBaseline />\n          <Title classes={classes} />\n          <Form classes={classes} addData={this.addData} />\n          <Display classes={classes} data={this.state.data} removeData={this.removeData} updateLikes={this.updateLikes}/>\n        </Container>\n      </main>\n    );\n  }\n}\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}